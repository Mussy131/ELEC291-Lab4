0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Fri Mar 01 07:07:23 2024
0000              5   ;--------------------------------------------------------
                  5   $name lab4
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _get_phase
0000             29            public _GPIO_Init
0000             30            public _ADC_Read
0000             31            public _ADC_Init
0000             32            public _getsn
0000             33            public _LCDprint
0000             34            public _LCD_4BIT
0000             35            public _WriteCommand
0000             36            public _WriteData
0000             37            public _LCD_byte
0000             38            public _LCD_pulse
0000             39            public _waitms
0000             40            public _Timer3us
0000             41            public __c51_external_startup
0000             42            public _LCDprint_PARM_3
0000             43            public _getsn_PARM_2
0000             44            public _LCDprint_PARM_2
0000             45   ;--------------------------------------------------------
0000             46   ; Special Function Registers
0000             47   ;--------------------------------------------------------
0000             48   _ACC            DATA 0xe0
0000             49   _ADC0ASAH       DATA 0xb6
0000             50   _ADC0ASAL       DATA 0xb5
0000             51   _ADC0ASCF       DATA 0xa1
0000             52   _ADC0ASCT       DATA 0xc7
0000             53   _ADC0CF0        DATA 0xbc
0000             54   _ADC0CF1        DATA 0xb9
0000             55   _ADC0CF2        DATA 0xdf
0000             56   _ADC0CN0        DATA 0xe8
0000             57   _ADC0CN1        DATA 0xb2
0000             58   _ADC0CN2        DATA 0xb3
0000             59   _ADC0GTH        DATA 0xc4
0000             60   _ADC0GTL        DATA 0xc3
0000             61   _ADC0H          DATA 0xbe
0000             62   _ADC0L          DATA 0xbd
0000             63   _ADC0LTH        DATA 0xc6
0000             64   _ADC0LTL        DATA 0xc5
0000             65   _ADC0MX         DATA 0xbb
0000             66   _B              DATA 0xf0
0000             67   _CKCON0         DATA 0x8e
0000             68   _CKCON1         DATA 0xa6
0000             69   _CLEN0          DATA 0xc6
0000             70   _CLIE0          DATA 0xc7
0000             71   _CLIF0          DATA 0xe8
0000             72   _CLKSEL         DATA 0xa9
0000             73   _CLOUT0         DATA 0xd1
0000             74   _CLU0CF         DATA 0xb1
0000             75   _CLU0FN         DATA 0xaf
0000             76   _CLU0MX         DATA 0x84
0000             77   _CLU1CF         DATA 0xb3
0000             78   _CLU1FN         DATA 0xb2
0000             79   _CLU1MX         DATA 0x85
0000             80   _CLU2CF         DATA 0xb6
0000             81   _CLU2FN         DATA 0xb5
0000             82   _CLU2MX         DATA 0x91
0000             83   _CLU3CF         DATA 0xbf
0000             84   _CLU3FN         DATA 0xbe
0000             85   _CLU3MX         DATA 0xae
0000             86   _CMP0CN0        DATA 0x9b
0000             87   _CMP0CN1        DATA 0x99
0000             88   _CMP0MD         DATA 0x9d
0000             89   _CMP0MX         DATA 0x9f
0000             90   _CMP1CN0        DATA 0xbf
0000             91   _CMP1CN1        DATA 0xac
0000             92   _CMP1MD         DATA 0xab
0000             93   _CMP1MX         DATA 0xaa
0000             94   _CRC0CN0        DATA 0xce
0000             95   _CRC0CN1        DATA 0x86
0000             96   _CRC0CNT        DATA 0xd3
0000             97   _CRC0DAT        DATA 0xcb
0000             98   _CRC0FLIP       DATA 0xcf
0000             99   _CRC0IN         DATA 0xca
0000            100   _CRC0ST         DATA 0xd2
0000            101   _DAC0CF0        DATA 0x91
0000            102   _DAC0CF1        DATA 0x92
0000            103   _DAC0H          DATA 0x85
0000            104   _DAC0L          DATA 0x84
0000            105   _DAC1CF0        DATA 0x93
0000            106   _DAC1CF1        DATA 0x94
0000            107   _DAC1H          DATA 0x8a
0000            108   _DAC1L          DATA 0x89
0000            109   _DAC2CF0        DATA 0x95
0000            110   _DAC2CF1        DATA 0x96
0000            111   _DAC2H          DATA 0x8c
0000            112   _DAC2L          DATA 0x8b
0000            113   _DAC3CF0        DATA 0x9a
0000            114   _DAC3CF1        DATA 0x9c
0000            115   _DAC3H          DATA 0x8e
0000            116   _DAC3L          DATA 0x8d
0000            117   _DACGCF0        DATA 0x88
0000            118   _DACGCF1        DATA 0x98
0000            119   _DACGCF2        DATA 0xa2
0000            120   _DERIVID        DATA 0xad
0000            121   _DEVICEID       DATA 0xb5
0000            122   _DPH            DATA 0x83
0000            123   _DPL            DATA 0x82
0000            124   _EIE1           DATA 0xe6
0000            125   _EIE2           DATA 0xf3
0000            126   _EIP1           DATA 0xbb
0000            127   _EIP1H          DATA 0xee
0000            128   _EIP2           DATA 0xed
0000            129   _EIP2H          DATA 0xf6
0000            130   _EMI0CN         DATA 0xe7
0000            131   _FLKEY          DATA 0xb7
0000            132   _HFO0CAL        DATA 0xc7
0000            133   _HFO1CAL        DATA 0xd6
0000            134   _HFOCN          DATA 0xef
0000            135   _I2C0ADM        DATA 0xff
0000            136   _I2C0CN0        DATA 0xba
0000            137   _I2C0DIN        DATA 0xbc
0000            138   _I2C0DOUT       DATA 0xbb
0000            139   _I2C0FCN0       DATA 0xad
0000            140   _I2C0FCN1       DATA 0xab
0000            141   _I2C0FCT        DATA 0xf5
0000            142   _I2C0SLAD       DATA 0xbd
0000            143   _I2C0STAT       DATA 0xb9
0000            144   _IE             DATA 0xa8
0000            145   _IP             DATA 0xb8
0000            146   _IPH            DATA 0xf2
0000            147   _IT01CF         DATA 0xe4
0000            148   _LFO0CN         DATA 0xb1
0000            149   _P0             DATA 0x80
0000            150   _P0MASK         DATA 0xfe
0000            151   _P0MAT          DATA 0xfd
0000            152   _P0MDIN         DATA 0xf1
0000            153   _P0MDOUT        DATA 0xa4
0000            154   _P0SKIP         DATA 0xd4
0000            155   _P1             DATA 0x90
0000            156   _P1MASK         DATA 0xee
0000            157   _P1MAT          DATA 0xed
0000            158   _P1MDIN         DATA 0xf2
0000            159   _P1MDOUT        DATA 0xa5
0000            160   _P1SKIP         DATA 0xd5
0000            161   _P2             DATA 0xa0
0000            162   _P2MASK         DATA 0xfc
0000            163   _P2MAT          DATA 0xfb
0000            164   _P2MDIN         DATA 0xf3
0000            165   _P2MDOUT        DATA 0xa6
0000            166   _P2SKIP         DATA 0xcc
0000            167   _P3             DATA 0xb0
0000            168   _P3MDIN         DATA 0xf4
0000            169   _P3MDOUT        DATA 0x9c
0000            170   _PCA0CENT       DATA 0x9e
0000            171   _PCA0CLR        DATA 0x9c
0000            172   _PCA0CN0        DATA 0xd8
0000            173   _PCA0CPH0       DATA 0xfc
0000            174   _PCA0CPH1       DATA 0xea
0000            175   _PCA0CPH2       DATA 0xec
0000            176   _PCA0CPH3       DATA 0xf5
0000            177   _PCA0CPH4       DATA 0x85
0000            178   _PCA0CPH5       DATA 0xde
0000            179   _PCA0CPL0       DATA 0xfb
0000            180   _PCA0CPL1       DATA 0xe9
0000            181   _PCA0CPL2       DATA 0xeb
0000            182   _PCA0CPL3       DATA 0xf4
0000            183   _PCA0CPL4       DATA 0x84
0000            184   _PCA0CPL5       DATA 0xdd
0000            185   _PCA0CPM0       DATA 0xda
0000            186   _PCA0CPM1       DATA 0xdb
0000            187   _PCA0CPM2       DATA 0xdc
0000            188   _PCA0CPM3       DATA 0xae
0000            189   _PCA0CPM4       DATA 0xaf
0000            190   _PCA0CPM5       DATA 0xcc
0000            191   _PCA0H          DATA 0xfa
0000            192   _PCA0L          DATA 0xf9
0000            193   _PCA0MD         DATA 0xd9
0000            194   _PCA0POL        DATA 0x96
0000            195   _PCA0PWM        DATA 0xf7
0000            196   _PCON0          DATA 0x87
0000            197   _PCON1          DATA 0xcd
0000            198   _PFE0CN         DATA 0xc1
0000            199   _PRTDRV         DATA 0xf6
0000            200   _PSCTL          DATA 0x8f
0000            201   _PSTAT0         DATA 0xaa
0000            202   _PSW            DATA 0xd0
0000            203   _REF0CN         DATA 0xd1
0000            204   _REG0CN         DATA 0xc9
0000            205   _REVID          DATA 0xb6
0000            206   _RSTSRC         DATA 0xef
0000            207   _SBCON1         DATA 0x94
0000            208   _SBRLH1         DATA 0x96
0000            209   _SBRLL1         DATA 0x95
0000            210   _SBUF           DATA 0x99
0000            211   _SBUF0          DATA 0x99
0000            212   _SBUF1          DATA 0x92
0000            213   _SCON           DATA 0x98
0000            214   _SCON0          DATA 0x98
0000            215   _SCON1          DATA 0xc8
0000            216   _SFRPAGE        DATA 0xa7
0000            217   _SFRPGCN        DATA 0xbc
0000            218   _SFRSTACK       DATA 0xd7
0000            219   _SMB0ADM        DATA 0xd6
0000            220   _SMB0ADR        DATA 0xd7
0000            221   _SMB0CF         DATA 0xc1
0000            222   _SMB0CN0        DATA 0xc0
0000            223   _SMB0DAT        DATA 0xc2
0000            224   _SMB0FCN0       DATA 0xc3
0000            225   _SMB0FCN1       DATA 0xc4
0000            226   _SMB0FCT        DATA 0xef
0000            227   _SMB0RXLN       DATA 0xc5
0000            228   _SMB0TC         DATA 0xac
0000            229   _SMOD1          DATA 0x93
0000            230   _SP             DATA 0x81
0000            231   _SPI0CFG        DATA 0xa1
0000            232   _SPI0CKR        DATA 0xa2
0000            233   _SPI0CN0        DATA 0xf8
0000            234   _SPI0DAT        DATA 0xa3
0000            235   _SPI0FCN0       DATA 0x9a
0000            236   _SPI0FCN1       DATA 0x9b
0000            237   _SPI0FCT        DATA 0xf7
0000            238   _SPI0PCF        DATA 0xdf
0000            239   _TCON           DATA 0x88
0000            240   _TH0            DATA 0x8c
0000            241   _TH1            DATA 0x8d
0000            242   _TL0            DATA 0x8a
0000            243   _TL1            DATA 0x8b
0000            244   _TMOD           DATA 0x89
0000            245   _TMR2CN0        DATA 0xc8
0000            246   _TMR2CN1        DATA 0xfd
0000            247   _TMR2H          DATA 0xcf
0000            248   _TMR2L          DATA 0xce
0000            249   _TMR2RLH        DATA 0xcb
0000            250   _TMR2RLL        DATA 0xca
0000            251   _TMR3CN0        DATA 0x91
0000            252   _TMR3CN1        DATA 0xfe
0000            253   _TMR3H          DATA 0x95
0000            254   _TMR3L          DATA 0x94
0000            255   _TMR3RLH        DATA 0x93
0000            256   _TMR3RLL        DATA 0x92
0000            257   _TMR4CN0        DATA 0x98
0000            258   _TMR4CN1        DATA 0xff
0000            259   _TMR4H          DATA 0xa5
0000            260   _TMR4L          DATA 0xa4
0000            261   _TMR4RLH        DATA 0xa3
0000            262   _TMR4RLL        DATA 0xa2
0000            263   _TMR5CN0        DATA 0xc0
0000            264   _TMR5CN1        DATA 0xf1
0000            265   _TMR5H          DATA 0xd5
0000            266   _TMR5L          DATA 0xd4
0000            267   _TMR5RLH        DATA 0xd3
0000            268   _TMR5RLL        DATA 0xd2
0000            269   _UART0PCF       DATA 0xd9
0000            270   _UART1FCN0      DATA 0x9d
0000            271   _UART1FCN1      DATA 0xd8
0000            272   _UART1FCT       DATA 0xfa
0000            273   _UART1LIN       DATA 0x9e
0000            274   _UART1PCF       DATA 0xda
0000            275   _VDM0CN         DATA 0xff
0000            276   _WDTCN          DATA 0x97
0000            277   _XBR0           DATA 0xe1
0000            278   _XBR1           DATA 0xe2
0000            279   _XBR2           DATA 0xe3
0000            280   _XOSC0CN        DATA 0x86
0000            281   _DPTR           DATA 0x8382
0000            282   _TMR2RL         DATA 0xcbca
0000            283   _TMR3RL         DATA 0x9392
0000            284   _TMR4RL         DATA 0xa3a2
0000            285   _TMR5RL         DATA 0xd3d2
0000            286   _TMR0           DATA 0x8c8a
0000            287   _TMR1           DATA 0x8d8b
0000            288   _TMR2           DATA 0xcfce
0000            289   _TMR3           DATA 0x9594
0000            290   _TMR4           DATA 0xa5a4
0000            291   _TMR5           DATA 0xd5d4
0000            292   _SBRL1          DATA 0x9695
0000            293   _PCA0           DATA 0xfaf9
0000            294   _PCA0CP0        DATA 0xfcfb
0000            295   _PCA0CP1        DATA 0xeae9
0000            296   _PCA0CP2        DATA 0xeceb
0000            297   _PCA0CP3        DATA 0xf5f4
0000            298   _PCA0CP4        DATA 0x8584
0000            299   _PCA0CP5        DATA 0xdedd
0000            300   _ADC0ASA        DATA 0xb6b5
0000            301   _ADC0GT         DATA 0xc4c3
0000            302   _ADC0           DATA 0xbebd
0000            303   _ADC0LT         DATA 0xc6c5
0000            304   _DAC0           DATA 0x8584
0000            305   _DAC1           DATA 0x8a89
0000            306   _DAC2           DATA 0x8c8b
0000            307   _DAC3           DATA 0x8e8d
0000            308   ;--------------------------------------------------------
0000            309   ; special function bits
0000            310   ;--------------------------------------------------------
0000            311   _ACC_0          BIT 0xe0
0000            312   _ACC_1          BIT 0xe1
0000            313   _ACC_2          BIT 0xe2
0000            314   _ACC_3          BIT 0xe3
0000            315   _ACC_4          BIT 0xe4
0000            316   _ACC_5          BIT 0xe5
0000            317   _ACC_6          BIT 0xe6
0000            318   _ACC_7          BIT 0xe7
0000            319   _TEMPE          BIT 0xe8
0000            320   _ADGN0          BIT 0xe9
0000            321   _ADGN1          BIT 0xea
0000            322   _ADWINT         BIT 0xeb
0000            323   _ADBUSY         BIT 0xec
0000            324   _ADINT          BIT 0xed
0000            325   _IPOEN          BIT 0xee
0000            326   _ADEN           BIT 0xef
0000            327   _B_0            BIT 0xf0
0000            328   _B_1            BIT 0xf1
0000            329   _B_2            BIT 0xf2
0000            330   _B_3            BIT 0xf3
0000            331   _B_4            BIT 0xf4
0000            332   _B_5            BIT 0xf5
0000            333   _B_6            BIT 0xf6
0000            334   _B_7            BIT 0xf7
0000            335   _C0FIF          BIT 0xe8
0000            336   _C0RIF          BIT 0xe9
0000            337   _C1FIF          BIT 0xea
0000            338   _C1RIF          BIT 0xeb
0000            339   _C2FIF          BIT 0xec
0000            340   _C2RIF          BIT 0xed
0000            341   _C3FIF          BIT 0xee
0000            342   _C3RIF          BIT 0xef
0000            343   _D1SRC0         BIT 0x88
0000            344   _D1SRC1         BIT 0x89
0000            345   _D1AMEN         BIT 0x8a
0000            346   _D01REFSL       BIT 0x8b
0000            347   _D3SRC0         BIT 0x8c
0000            348   _D3SRC1         BIT 0x8d
0000            349   _D3AMEN         BIT 0x8e
0000            350   _D23REFSL       BIT 0x8f
0000            351   _D0UDIS         BIT 0x98
0000            352   _D1UDIS         BIT 0x99
0000            353   _D2UDIS         BIT 0x9a
0000            354   _D3UDIS         BIT 0x9b
0000            355   _EX0            BIT 0xa8
0000            356   _ET0            BIT 0xa9
0000            357   _EX1            BIT 0xaa
0000            358   _ET1            BIT 0xab
0000            359   _ES0            BIT 0xac
0000            360   _ET2            BIT 0xad
0000            361   _ESPI0          BIT 0xae
0000            362   _EA             BIT 0xaf
0000            363   _PX0            BIT 0xb8
0000            364   _PT0            BIT 0xb9
0000            365   _PX1            BIT 0xba
0000            366   _PT1            BIT 0xbb
0000            367   _PS0            BIT 0xbc
0000            368   _PT2            BIT 0xbd
0000            369   _PSPI0          BIT 0xbe
0000            370   _P0_0           BIT 0x80
0000            371   _P0_1           BIT 0x81
0000            372   _P0_2           BIT 0x82
0000            373   _P0_3           BIT 0x83
0000            374   _P0_4           BIT 0x84
0000            375   _P0_5           BIT 0x85
0000            376   _P0_6           BIT 0x86
0000            377   _P0_7           BIT 0x87
0000            378   _P1_0           BIT 0x90
0000            379   _P1_1           BIT 0x91
0000            380   _P1_2           BIT 0x92
0000            381   _P1_3           BIT 0x93
0000            382   _P1_4           BIT 0x94
0000            383   _P1_5           BIT 0x95
0000            384   _P1_6           BIT 0x96
0000            385   _P1_7           BIT 0x97
0000            386   _P2_0           BIT 0xa0
0000            387   _P2_1           BIT 0xa1
0000            388   _P2_2           BIT 0xa2
0000            389   _P2_3           BIT 0xa3
0000            390   _P2_4           BIT 0xa4
0000            391   _P2_5           BIT 0xa5
0000            392   _P2_6           BIT 0xa6
0000            393   _P3_0           BIT 0xb0
0000            394   _P3_1           BIT 0xb1
0000            395   _P3_2           BIT 0xb2
0000            396   _P3_3           BIT 0xb3
0000            397   _P3_4           BIT 0xb4
0000            398   _P3_7           BIT 0xb7
0000            399   _CCF0           BIT 0xd8
0000            400   _CCF1           BIT 0xd9
0000            401   _CCF2           BIT 0xda
0000            402   _CCF3           BIT 0xdb
0000            403   _CCF4           BIT 0xdc
0000            404   _CCF5           BIT 0xdd
0000            405   _CR             BIT 0xde
0000            406   _CF             BIT 0xdf
0000            407   _PARITY         BIT 0xd0
0000            408   _F1             BIT 0xd1
0000            409   _OV             BIT 0xd2
0000            410   _RS0            BIT 0xd3
0000            411   _RS1            BIT 0xd4
0000            412   _F0             BIT 0xd5
0000            413   _AC             BIT 0xd6
0000            414   _CY             BIT 0xd7
0000            415   _RI             BIT 0x98
0000            416   _TI             BIT 0x99
0000            417   _RB8            BIT 0x9a
0000            418   _TB8            BIT 0x9b
0000            419   _REN            BIT 0x9c
0000            420   _CE             BIT 0x9d
0000            421   _SMODE          BIT 0x9e
0000            422   _RI1            BIT 0xc8
0000            423   _TI1            BIT 0xc9
0000            424   _RBX1           BIT 0xca
0000            425   _TBX1           BIT 0xcb
0000            426   _REN1           BIT 0xcc
0000            427   _PERR1          BIT 0xcd
0000            428   _OVR1           BIT 0xce
0000            429   _SI             BIT 0xc0
0000            430   _ACK            BIT 0xc1
0000            431   _ARBLOST        BIT 0xc2
0000            432   _ACKRQ          BIT 0xc3
0000            433   _STO            BIT 0xc4
0000            434   _STA            BIT 0xc5
0000            435   _TXMODE         BIT 0xc6
0000            436   _MASTER         BIT 0xc7
0000            437   _SPIEN          BIT 0xf8
0000            438   _TXNF           BIT 0xf9
0000            439   _NSSMD0         BIT 0xfa
0000            440   _NSSMD1         BIT 0xfb
0000            441   _RXOVRN         BIT 0xfc
0000            442   _MODF           BIT 0xfd
0000            443   _WCOL           BIT 0xfe
0000            444   _SPIF           BIT 0xff
0000            445   _IT0            BIT 0x88
0000            446   _IE0            BIT 0x89
0000            447   _IT1            BIT 0x8a
0000            448   _IE1            BIT 0x8b
0000            449   _TR0            BIT 0x8c
0000            450   _TF0            BIT 0x8d
0000            451   _TR1            BIT 0x8e
0000            452   _TF1            BIT 0x8f
0000            453   _T2XCLK0        BIT 0xc8
0000            454   _T2XCLK1        BIT 0xc9
0000            455   _TR2            BIT 0xca
0000            456   _T2SPLIT        BIT 0xcb
0000            457   _TF2CEN         BIT 0xcc
0000            458   _TF2LEN         BIT 0xcd
0000            459   _TF2L           BIT 0xce
0000            460   _TF2H           BIT 0xcf
0000            461   _T4XCLK0        BIT 0x98
0000            462   _T4XCLK1        BIT 0x99
0000            463   _TR4            BIT 0x9a
0000            464   _T4SPLIT        BIT 0x9b
0000            465   _TF4CEN         BIT 0x9c
0000            466   _TF4LEN         BIT 0x9d
0000            467   _TF4L           BIT 0x9e
0000            468   _TF4H           BIT 0x9f
0000            469   _T5XCLK0        BIT 0xc0
0000            470   _T5XCLK1        BIT 0xc1
0000            471   _TR5            BIT 0xc2
0000            472   _T5SPLIT        BIT 0xc3
0000            473   _TF5CEN         BIT 0xc4
0000            474   _TF5LEN         BIT 0xc5
0000            475   _TF5L           BIT 0xc6
0000            476   _TF5H           BIT 0xc7
0000            477   _RIE            BIT 0xd8
0000            478   _RXTO0          BIT 0xd9
0000            479   _RXTO1          BIT 0xda
0000            480   _RFRQ           BIT 0xdb
0000            481   _TIE            BIT 0xdc
0000            482   _TXHOLD         BIT 0xdd
0000            483   _TXNF1          BIT 0xde
0000            484   _TFRQ           BIT 0xdf
0000            485   ;--------------------------------------------------------
0000            486   ; overlayable register banks
0000            487   ;--------------------------------------------------------
0000            488            rbank0 segment data overlay
0000            489   ;--------------------------------------------------------
0000            490   ; internal ram data
0000            491   ;--------------------------------------------------------
0000            492            rseg R_DSEG
0000            493   _LCDprint_PARM_2:
0000            494            ds 1
0001            495   _getsn_PARM_2:
0001            496            ds 2
0003            497   _getsn_buff_1_64:
0003            498            ds 3
0006            499   _getsn_sloc0_1_0:
0006            500            ds 2
0008            501   _main_buff_1_79:
0008            502            ds 17
0019            503   _main_sloc0_1_0:
0019            504            ds 4
001D            505   _main_sloc1_1_0:
001D            506            ds 4
0021            507   ;--------------------------------------------------------
0021            508   ; overlayable items in internal ram 
0021            509   ;--------------------------------------------------------
0000            510            rseg    R_OSEG
0000            511            rseg    R_OSEG
0000            512            rseg    R_OSEG
0000            513   ;--------------------------------------------------------
0000            514   ; indirectly addressable internal ram data
0000            515   ;--------------------------------------------------------
0000            516            rseg R_ISEG
0000            517   _main_voltage_1_79:
0000            518            ds 4
0004            519   _main_angle_1_79:
0004            520            ds 4
0008            521   _main_vr_1_79:
0008            522            ds 4
000C            523   _main_vi_1_79:
000C            524            ds 4
0010            525   _main_cr_1_79:
0010            526            ds 4
0014            527   _main_ci_1_79:
0014            528            ds 4
0018            529   _main_zr_1_79:
0018            530            ds 4
001C            531   ;--------------------------------------------------------
001C            532   ; absolute internal ram data
001C            533   ;--------------------------------------------------------
0000            534            DSEG
0000            535   ;--------------------------------------------------------
0000            536   ; bit data
0000            537   ;--------------------------------------------------------
0000            538            rseg R_BSEG
0000            539   _LCDprint_PARM_3:
0000            540            DBIT    1
0001            541   ;--------------------------------------------------------
0001            542   ; paged external ram data
0001            543   ;--------------------------------------------------------
0000            544            rseg R_PSEG
0000            545   ;--------------------------------------------------------
0000            546   ; external ram data
0000            547   ;--------------------------------------------------------
0000            548            rseg R_XSEG
0000            549   ;--------------------------------------------------------
0000            550   ; absolute external ram data
0000            551   ;--------------------------------------------------------
0000            552            XSEG
0000            553   ;--------------------------------------------------------
0000            554   ; external initialized ram data
0000            555   ;--------------------------------------------------------
0000            556            rseg R_IXSEG
0000            557            rseg R_HOME
0000            558            rseg R_GSINIT
0000            559            rseg R_CSEG
0000            560   ;--------------------------------------------------------
0000            561   ; Reset entry point and interrupt vectors
0000            562   ;--------------------------------------------------------
0000            563            CSEG at 0x0000
0000 020000     564            ljmp    _crt0
0003            565   ;--------------------------------------------------------
0003            566   ; global & static initialisations
0003            567   ;--------------------------------------------------------
0000            568            rseg R_HOME
0000            569            rseg R_GSINIT
0000            570            rseg R_GSINIT
0000            571   ;--------------------------------------------------------
0000            572   ; data variables initialization
0000            573   ;--------------------------------------------------------
0000            574            rseg R_DINIT
0000            575            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            576   ;--------------------------------------------------------
0000            577   ; code
0000            578   ;--------------------------------------------------------
0000            579            rseg R_CSEG
0000            580   ;------------------------------------------------------------
0000            581   ;Allocation info for local variables in function '_c51_external_startup'
0000            582   ;------------------------------------------------------------
0000            583   ;------------------------------------------------------------
0000            584   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:34: char _c51_external_startup (void)
0000            585   ;        -----------------------------------------
0000            586   ;         function _c51_external_startup
0000            587   ;        -----------------------------------------
0000            588   __c51_external_startup:
0000            589            using   0
0000            590   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:37: SFRPAGE = 0x00;
0000 75A700     591            mov     _SFRPAGE,#0x00
0003            592   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:38: WDTCN = 0xDE; //First key
0003 7597DE     593            mov     _WDTCN,#0xDE
0006            594   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:39: WDTCN = 0xAD; //Second key
0006 7597AD     595            mov     _WDTCN,#0xAD
0009            596   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:46: SFRPAGE = 0x10;
0009 75A710     597            mov     _SFRPAGE,#0x10
000C            598   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:47: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
000C 75C120     599            mov     _PFE0CN,#0x20
000F            600   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:48: SFRPAGE = 0x00;
000F 75A700     601            mov     _SFRPAGE,#0x00
0012            602   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:69: CLKSEL = 0x00;
0012 75A900     603            mov     _CLKSEL,#0x00
0015            604   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:70: CLKSEL = 0x00;
0015 75A900     605            mov     _CLKSEL,#0x00
0018            606   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:71: while ((CLKSEL & 0x80) == 0);
0018            607   L002001?:
0018 E5A9       608            mov     a,_CLKSEL
001A 30E7C0     609            jnb     acc.7,L002001?
001D            610   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:72: CLKSEL = 0x03;
001D 75A903     611            mov     _CLKSEL,#0x03
0020            612   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:73: CLKSEL = 0x03;
0020 75A903     613            mov     _CLKSEL,#0x03
0023            614   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:74: while ((CLKSEL & 0x80) == 0);
0023            615   L002004?:
0023 E5A9       616            mov     a,_CLKSEL
0025 30E740     617            jnb     acc.7,L002004?
0028            618   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:79: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
0028 43A410     619            orl     _P0MDOUT,#0x10
002B            620   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:80: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
002B 75E101     621            mov     _XBR0,#0x01
002E            622   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:81: XBR1     = 0X00;
002E 75E200     623            mov     _XBR1,#0x00
0031            624   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:82: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0031 75E340     625            mov     _XBR2,#0x40
0034            626   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:88: SCON0 = 0x10;
0034 759810     627            mov     _SCON0,#0x10
0037            628   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:89: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
0037 858E8E     629            mov     _CKCON0,_CKCON0
003A            630   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:90: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003A 758DE6     631            mov     _TH1,#0xE6
003D            632   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:91: TL1 = TH1;      // Init Timer1
003D 858D8B     633            mov     _TL1,_TH1
0040            634   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:92: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0040 53890F     635            anl     _TMOD,#0x0F
0043            636   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:93: TMOD |=  0x20;                       
0043 438920     637            orl     _TMOD,#0x20
0046            638   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:94: TR1 = 1; // START Timer1
0046 D28E       639            setb    _TR1
0048            640   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:95: TI = 1;  // Indicate TX0 ready
0048 D299       641            setb    _TI
004A            642   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:97: return 0;
004A 758200     643            mov     dpl,#0x00
004D 22         644            ret
004E            645   ;------------------------------------------------------------
004E            646   ;Allocation info for local variables in function 'Timer3us'
004E            647   ;------------------------------------------------------------
004E            648   ;us                        Allocated to registers r2 
004E            649   ;i                         Allocated to registers r3 
004E            650   ;------------------------------------------------------------
004E            651   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:102: void Timer3us(unsigned char us)
004E            652   ;        -----------------------------------------
004E            653   ;         function Timer3us
004E            654   ;        -----------------------------------------
004E            655   _Timer3us:
004E AA82       656            mov     r2,dpl
0050            657   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:107: CKCON0|=0b_0100_0000;
0050 438E40     658            orl     _CKCON0,#0x40
0053            659   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:109: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0053 7592B8     660            mov     _TMR3RL,#0xB8
0056 7593FF     661            mov     (_TMR3RL >> 8),#0xFF
0059            662   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:110: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0059 859294     663            mov     _TMR3,_TMR3RL
005C 859395     664            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
005F            665   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:112: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
005F 759104     666            mov     _TMR3CN0,#0x04
0062            667   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:113: for (i = 0; i < us; i++)       // Count <us> overflows
0062 7B00       668            mov     r3,#0x00
0064            669   L003004?:
0064 C3         670            clr     c
0065 EB         671            mov     a,r3
0066 9A         672            subb    a,r2
0067 5000       673            jnc     L003007?
0069            674   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:115: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0069            675   L003001?:
0069 E591       676            mov     a,_TMR3CN0
006B 30E740     677            jnb     acc.7,L003001?
006E            678   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:116: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
006E 53917F     679            anl     _TMR3CN0,#0x7F
0071            680   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:113: for (i = 0; i < us; i++)       // Count <us> overflows
0071 0B         681            inc     r3
0072 8000       682            sjmp    L003004?
0074            683   L003007?:
0074            684   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:118: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0074 759100     685            mov     _TMR3CN0,#0x00
0077 22         686            ret
0078            687   ;------------------------------------------------------------
0078            688   ;Allocation info for local variables in function 'waitms'
0078            689   ;------------------------------------------------------------
0078            690   ;ms                        Allocated to registers r2 r3 
0078            691   ;j                         Allocated to registers r4 r5 
0078            692   ;k                         Allocated to registers r6 
0078            693   ;------------------------------------------------------------
0078            694   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:121: void waitms (unsigned int ms)
0078            695   ;        -----------------------------------------
0078            696   ;         function waitms
0078            697   ;        -----------------------------------------
0078            698   _waitms:
0078 AA82       699            mov     r2,dpl
007A AB83       700            mov     r3,dph
007C            701   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:125: for(j=0; j<ms; j++)
007C 7C00       702            mov     r4,#0x00
007E 7D00       703            mov     r5,#0x00
0080            704   L004005?:
0080 C3         705            clr     c
0081 EC         706            mov     a,r4
0082 9A         707            subb    a,r2
0083 ED         708            mov     a,r5
0084 9B         709            subb    a,r3
0085 5000       710            jnc     L004009?
0087            711   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:126: for (k=0; k<4; k++) Timer3us(250);
0087 7E00       712            mov     r6,#0x00
0089            713   L004001?:
0089 BE0480     714            cjne    r6,#0x04,L004018?
008C            715   L004018?:
008C 5000       716            jnc     L004007?
008E 7582FA     717            mov     dpl,#0xFA
0091 C002       718            push    ar2
0093 C003       719            push    ar3
0095 C004       720            push    ar4
0097 C005       721            push    ar5
0099 C006       722            push    ar6
009B 120000     723            lcall   _Timer3us
009E D006       724            pop     ar6
00A0 D005       725            pop     ar5
00A2 D004       726            pop     ar4
00A4 D003       727            pop     ar3
00A6 D002       728            pop     ar2
00A8 0E         729            inc     r6
00A9 8000       730            sjmp    L004001?
00AB            731   L004007?:
00AB            732   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:125: for(j=0; j<ms; j++)
00AB 0C         733            inc     r4
00AC BC00C0     734            cjne    r4,#0x00,L004005?
00AF 0D         735            inc     r5
00B0 8000       736            sjmp    L004005?
00B2            737   L004009?:
00B2 22         738            ret
00B3            739   ;------------------------------------------------------------
00B3            740   ;Allocation info for local variables in function 'LCD_pulse'
00B3            741   ;------------------------------------------------------------
00B3            742   ;------------------------------------------------------------
00B3            743   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:129: void LCD_pulse (void)
00B3            744   ;        -----------------------------------------
00B3            745   ;         function LCD_pulse
00B3            746   ;        -----------------------------------------
00B3            747   _LCD_pulse:
00B3            748   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:131: LCD_E=1;
00B3 D2A0       749            setb    _P2_0
00B5            750   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:132: Timer3us(40);
00B5 758228     751            mov     dpl,#0x28
00B8 120000     752            lcall   _Timer3us
00BB            753   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:133: LCD_E=0;
00BB C2A0       754            clr     _P2_0
00BD 22         755            ret
00BE            756   ;------------------------------------------------------------
00BE            757   ;Allocation info for local variables in function 'LCD_byte'
00BE            758   ;------------------------------------------------------------
00BE            759   ;x                         Allocated to registers r2 
00BE            760   ;------------------------------------------------------------
00BE            761   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:136: void LCD_byte (unsigned char x)
00BE            762   ;        -----------------------------------------
00BE            763   ;         function LCD_byte
00BE            764   ;        -----------------------------------------
00BE            765   _LCD_byte:
00BE AA82       766            mov     r2,dpl
00C0            767   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:139: ACC=x; //Send high nible
00C0 8AE0       768            mov     _ACC,r2
00C2            769   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:140: LCD_D7=ACC_7;
00C2 A2E7       770            mov     c,_ACC_7
00C4 9290       771            mov     _P1_0,c
00C6            772   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:141: LCD_D6=ACC_6;
00C6 A2E6       773            mov     c,_ACC_6
00C8 9291       774            mov     _P1_1,c
00CA            775   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:142: LCD_D5=ACC_5;
00CA A2E5       776            mov     c,_ACC_5
00CC 9292       777            mov     _P1_2,c
00CE            778   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:143: LCD_D4=ACC_4;
00CE A2E4       779            mov     c,_ACC_4
00D0 9293       780            mov     _P1_3,c
00D2            781   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:144: LCD_pulse();
00D2 C002       782            push    ar2
00D4 120000     783            lcall   _LCD_pulse
00D7            784   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:145: Timer3us(40);
00D7 758228     785            mov     dpl,#0x28
00DA 120000     786            lcall   _Timer3us
00DD D002       787            pop     ar2
00DF            788   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:146: ACC=x; //Send low nible
00DF 8AE0       789            mov     _ACC,r2
00E1            790   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:147: LCD_D7=ACC_3;
00E1 A2E3       791            mov     c,_ACC_3
00E3 9290       792            mov     _P1_0,c
00E5            793   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:148: LCD_D6=ACC_2;
00E5 A2E2       794            mov     c,_ACC_2
00E7 9291       795            mov     _P1_1,c
00E9            796   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:149: LCD_D5=ACC_1;
00E9 A2E1       797            mov     c,_ACC_1
00EB 9292       798            mov     _P1_2,c
00ED            799   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:150: LCD_D4=ACC_0;
00ED A2E0       800            mov     c,_ACC_0
00EF 9293       801            mov     _P1_3,c
00F1            802   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:151: LCD_pulse();
00F1 020000     803            ljmp    _LCD_pulse
00F4            804   ;------------------------------------------------------------
00F4            805   ;Allocation info for local variables in function 'WriteData'
00F4            806   ;------------------------------------------------------------
00F4            807   ;x                         Allocated to registers r2 
00F4            808   ;------------------------------------------------------------
00F4            809   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:154: void WriteData (unsigned char x)
00F4            810   ;        -----------------------------------------
00F4            811   ;         function WriteData
00F4            812   ;        -----------------------------------------
00F4            813   _WriteData:
00F4 AA82       814            mov     r2,dpl
00F6            815   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:156: LCD_RS=1;
00F6 D297       816            setb    _P1_7
00F8            817   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:157: LCD_byte(x);
00F8 8A82       818            mov     dpl,r2
00FA 120000     819            lcall   _LCD_byte
00FD            820   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:158: waitms(2);
00FD 900002     821            mov     dptr,#0x0002
0100 020000     822            ljmp    _waitms
0103            823   ;------------------------------------------------------------
0103            824   ;Allocation info for local variables in function 'WriteCommand'
0103            825   ;------------------------------------------------------------
0103            826   ;x                         Allocated to registers r2 
0103            827   ;------------------------------------------------------------
0103            828   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:161: void WriteCommand (unsigned char x)
0103            829   ;        -----------------------------------------
0103            830   ;         function WriteCommand
0103            831   ;        -----------------------------------------
0103            832   _WriteCommand:
0103 AA82       833            mov     r2,dpl
0105            834   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:163: LCD_RS=0;
0105 C297       835            clr     _P1_7
0107            836   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:164: LCD_byte(x);
0107 8A82       837            mov     dpl,r2
0109 120000     838            lcall   _LCD_byte
010C            839   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:165: waitms(5);
010C 900005     840            mov     dptr,#0x0005
010F 020000     841            ljmp    _waitms
0112            842   ;------------------------------------------------------------
0112            843   ;Allocation info for local variables in function 'LCD_4BIT'
0112            844   ;------------------------------------------------------------
0112            845   ;------------------------------------------------------------
0112            846   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:168: void LCD_4BIT (void)
0112            847   ;        -----------------------------------------
0112            848   ;         function LCD_4BIT
0112            849   ;        -----------------------------------------
0112            850   _LCD_4BIT:
0112            851   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:170: LCD_E=0; // Resting state of LCD's enable is zero
0112 C2A0       852            clr     _P2_0
0114            853   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:172: waitms(20);
0114 900014     854            mov     dptr,#0x0014
0117 120000     855            lcall   _waitms
011A            856   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:174: WriteCommand(0x33);
011A 758233     857            mov     dpl,#0x33
011D 120000     858            lcall   _WriteCommand
0120            859   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:175: WriteCommand(0x33);
0120 758233     860            mov     dpl,#0x33
0123 120000     861            lcall   _WriteCommand
0126            862   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:176: WriteCommand(0x32); // Change to 4-bit mode
0126 758232     863            mov     dpl,#0x32
0129 120000     864            lcall   _WriteCommand
012C            865   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:179: WriteCommand(0x28);
012C 758228     866            mov     dpl,#0x28
012F 120000     867            lcall   _WriteCommand
0132            868   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:180: WriteCommand(0x0c);
0132 75820C     869            mov     dpl,#0x0C
0135 120000     870            lcall   _WriteCommand
0138            871   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:181: WriteCommand(0x01); // Clear screen command (takes some time)
0138 758201     872            mov     dpl,#0x01
013B 120000     873            lcall   _WriteCommand
013E            874   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:182: waitms(20); // Wait for clear screen command to finsih.
013E 900014     875            mov     dptr,#0x0014
0141 020000     876            ljmp    _waitms
0144            877   ;------------------------------------------------------------
0144            878   ;Allocation info for local variables in function 'LCDprint'
0144            879   ;------------------------------------------------------------
0144            880   ;line                      Allocated with name '_LCDprint_PARM_2'
0144            881   ;string                    Allocated to registers r2 r3 r4 
0144            882   ;j                         Allocated to registers r5 r6 
0144            883   ;------------------------------------------------------------
0144            884   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:185: void LCDprint(char * string, unsigned char line, bit clear)
0144            885   ;        -----------------------------------------
0144            886   ;         function LCDprint
0144            887   ;        -----------------------------------------
0144            888   _LCDprint:
0144 AA82       889            mov     r2,dpl
0146 AB83       890            mov     r3,dph
0148 ACF0       891            mov     r4,b
014A            892   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:189: WriteCommand(line==2?0xc0:0x80);
014A 7402       893            mov     a,#0x02
014C B5C040     894            cjne    a,_LCDprint_PARM_2,L010013?
014F 7DC0       895            mov     r5,#0xC0
0151 8000       896            sjmp    L010014?
0153            897   L010013?:
0153 7D80       898            mov     r5,#0x80
0155            899   L010014?:
0155 8D82       900            mov     dpl,r5
0157 C002       901            push    ar2
0159 C003       902            push    ar3
015B C004       903            push    ar4
015D 120000     904            lcall   _WriteCommand
0160            905   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:190: waitms(5);
0160 900005     906            mov     dptr,#0x0005
0163 120000     907            lcall   _waitms
0166 D004       908            pop     ar4
0168 D003       909            pop     ar3
016A D002       910            pop     ar2
016C            911   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:191: for(j=0; string[j]!=0; j++)        WriteData(string[j]);// Write the message
016C 7D00       912            mov     r5,#0x00
016E 7E00       913            mov     r6,#0x00
0170            914   L010003?:
0170 ED         915            mov     a,r5
0171 2A         916            add     a,r2
0172 FF         917            mov     r7,a
0173 EE         918            mov     a,r6
0174 3B         919            addc    a,r3
0175 F8         920            mov     r0,a
0176 8C01       921            mov     ar1,r4
0178 8F82       922            mov     dpl,r7
017A 8883       923            mov     dph,r0
017C 89F0       924            mov     b,r1
017E 120000     925            lcall   __gptrget
0181 FF         926            mov     r7,a
0182 6000       927            jz      L010006?
0184 8F82       928            mov     dpl,r7
0186 C002       929            push    ar2
0188 C003       930            push    ar3
018A C004       931            push    ar4
018C C005       932            push    ar5
018E C006       933            push    ar6
0190 120000     934            lcall   _WriteData
0193 D006       935            pop     ar6
0195 D005       936            pop     ar5
0197 D004       937            pop     ar4
0199 D003       938            pop     ar3
019B D002       939            pop     ar2
019D 0D         940            inc     r5
019E BD00C0     941            cjne    r5,#0x00,L010003?
01A1 0E         942            inc     r6
01A2 8000       943            sjmp    L010003?
01A4            944   L010006?:
01A4            945   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:192: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01A4 303080     946            jnb     _LCDprint_PARM_3,L010011?
01A7 8D02       947            mov     ar2,r5
01A9 8E03       948            mov     ar3,r6
01AB            949   L010007?:
01AB C3         950            clr     c
01AC EA         951            mov     a,r2
01AD 9410       952            subb    a,#0x10
01AF EB         953            mov     a,r3
01B0 6480       954            xrl     a,#0x80
01B2 9480       955            subb    a,#0x80
01B4 5000       956            jnc     L010011?
01B6 758220     957            mov     dpl,#0x20
01B9 C002       958            push    ar2
01BB C003       959            push    ar3
01BD 120000     960            lcall   _WriteData
01C0 D003       961            pop     ar3
01C2 D002       962            pop     ar2
01C4 0A         963            inc     r2
01C5 BA00C0     964            cjne    r2,#0x00,L010007?
01C8 0B         965            inc     r3
01C9 8000       966            sjmp    L010007?
01CB            967   L010011?:
01CB 22         968            ret
01CC            969   ;------------------------------------------------------------
01CC            970   ;Allocation info for local variables in function 'getsn'
01CC            971   ;------------------------------------------------------------
01CC            972   ;len                       Allocated with name '_getsn_PARM_2'
01CC            973   ;buff                      Allocated with name '_getsn_buff_1_64'
01CC            974   ;j                         Allocated with name '_getsn_sloc0_1_0'
01CC            975   ;c                         Allocated to registers r3 
01CC            976   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
01CC            977   ;------------------------------------------------------------
01CC            978   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:195: int getsn (char * buff, int len)
01CC            979   ;        -----------------------------------------
01CC            980   ;         function getsn
01CC            981   ;        -----------------------------------------
01CC            982   _getsn:
01CC 858250     983            mov     _getsn_buff_1_64,dpl
01CF 858351     984            mov     (_getsn_buff_1_64 + 1),dph
01D2 85F052     985            mov     (_getsn_buff_1_64 + 2),b
01D5            986   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:200: for(j=0; j<(len-1); j++)
01D5 E4         987            clr     a
01D6 F5A0       988            mov     _getsn_sloc0_1_0,a
01D8 F5A1       989            mov     (_getsn_sloc0_1_0 + 1),a
01DA E570       990            mov     a,_getsn_PARM_2
01DC 24FF       991            add     a,#0xff
01DE FF         992            mov     r7,a
01DF E571       993            mov     a,(_getsn_PARM_2 + 1)
01E1 34FF       994            addc    a,#0xff
01E3 F8         995            mov     r0,a
01E4 7900       996            mov     r1,#0x00
01E6 7A00       997            mov     r2,#0x00
01E8            998   L011005?:
01E8 C3         999            clr     c
01E9 E9        1000            mov     a,r1
01EA 9F        1001            subb    a,r7
01EB EA        1002            mov     a,r2
01EC 6480      1003            xrl     a,#0x80
01EE 88F0      1004            mov     b,r0
01F0 63F080    1005            xrl     b,#0x80
01F3 95F0      1006            subb    a,b
01F5 5000      1007            jnc     L011008?
01F7           1008   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:202: c=getchar();
01F7 C002      1009            push    ar2
01F9 C007      1010            push    ar7
01FB C000      1011            push    ar0
01FD C001      1012            push    ar1
01FF 120000    1013            lcall   _getchar
0202 AB82      1014            mov     r3,dpl
0204 D001      1015            pop     ar1
0206 D000      1016            pop     ar0
0208 D007      1017            pop     ar7
020A D002      1018            pop     ar2
020C           1019   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:203: if ( (c=='\n') || (c=='\r') )
020C BB0AC0    1020            cjne    r3,#0x0A,L011015?
020F 8000      1021            sjmp    L011001?
0211           1022   L011015?:
0211 BB0D40    1023            cjne    r3,#0x0D,L011002?
0214           1024   L011001?:
0214           1025   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:205: buff[j]=0;
0214 E5A0      1026            mov     a,_getsn_sloc0_1_0
0216 2550      1027            add     a,_getsn_buff_1_64
0218 FC        1028            mov     r4,a
0219 E5A1      1029            mov     a,(_getsn_sloc0_1_0 + 1)
021B 3551      1030            addc    a,(_getsn_buff_1_64 + 1)
021D FD        1031            mov     r5,a
021E AE52      1032            mov     r6,(_getsn_buff_1_64 + 2)
0220 8C82      1033            mov     dpl,r4
0222 8D83      1034            mov     dph,r5
0224 8EF0      1035            mov     b,r6
0226 E4        1036            clr     a
0227 120000    1037            lcall   __gptrput
022A           1038   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:206: return j;
022A 85A082    1039            mov     dpl,_getsn_sloc0_1_0
022D 85A183    1040            mov     dph,(_getsn_sloc0_1_0 + 1)
0230 22        1041            ret
0231           1042   L011002?:
0231           1043   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:210: buff[j]=c;
0231 E9        1044            mov     a,r1
0232 2550      1045            add     a,_getsn_buff_1_64
0234 FC        1046            mov     r4,a
0235 EA        1047            mov     a,r2
0236 3551      1048            addc    a,(_getsn_buff_1_64 + 1)
0238 FD        1049            mov     r5,a
0239 AE52      1050            mov     r6,(_getsn_buff_1_64 + 2)
023B 8C82      1051            mov     dpl,r4
023D 8D83      1052            mov     dph,r5
023F 8EF0      1053            mov     b,r6
0241 EB        1054            mov     a,r3
0242 120000    1055            lcall   __gptrput
0245           1056   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:200: for(j=0; j<(len-1); j++)
0245 09        1057            inc     r1
0246 B900C0    1058            cjne    r1,#0x00,L011018?
0249 0A        1059            inc     r2
024A           1060   L011018?:
024A 89A0      1061            mov     _getsn_sloc0_1_0,r1
024C 8AA1      1062            mov     (_getsn_sloc0_1_0 + 1),r2
024E 8000      1063            sjmp    L011005?
0250           1064   L011008?:
0250           1065   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:213: buff[j]=0;
0250 E5A0      1066            mov     a,_getsn_sloc0_1_0
0252 2550      1067            add     a,_getsn_buff_1_64
0254 FA        1068            mov     r2,a
0255 E5A1      1069            mov     a,(_getsn_sloc0_1_0 + 1)
0257 3551      1070            addc    a,(_getsn_buff_1_64 + 1)
0259 FB        1071            mov     r3,a
025A AC52      1072            mov     r4,(_getsn_buff_1_64 + 2)
025C 8A82      1073            mov     dpl,r2
025E 8B83      1074            mov     dph,r3
0260 8CF0      1075            mov     b,r4
0262 E4        1076            clr     a
0263 120000    1077            lcall   __gptrput
0266           1078   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:214: return len;
0266 857082    1079            mov     dpl,_getsn_PARM_2
0269 857183    1080            mov     dph,(_getsn_PARM_2 + 1)
026C 22        1081            ret
026D           1082   ;------------------------------------------------------------
026D           1083   ;Allocation info for local variables in function 'ADC_Init'
026D           1084   ;------------------------------------------------------------
026D           1085   ;------------------------------------------------------------
026D           1086   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:217: void ADC_Init(void)
026D           1087   ;        -----------------------------------------
026D           1088   ;         function ADC_Init
026D           1089   ;        -----------------------------------------
026D           1090   _ADC_Init:
026D           1091   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:223: ADC0MX = QFP32_MUX_P2_6;
026D 75BB13    1092            mov     _ADC0MX,#0x13
0270           1093   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:226: ADC0CN1 = 0x81; // Set ADC0 to 14-bit mode
0270 75B281    1094            mov     _ADC0CN1,#0x81
0273           1095   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:230: REF0CN = 0x80; // Set Vref to use internal reference (2.4V)
0273 75D180    1096            mov     _REF0CN,#0x80
0276           1097   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:233: ADC0CN0 = 0x80; // Enable the ADC0
0276 75E880    1098            mov     _ADC0CN0,#0x80
0279 22        1099            ret
027A           1100   ;------------------------------------------------------------
027A           1101   ;Allocation info for local variables in function 'ADC_Read'
027A           1102   ;------------------------------------------------------------
027A           1103   ;ans                       Allocated to registers r2 r3 
027A           1104   ;------------------------------------------------------------
027A           1105   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:236: uint16_t ADC_Read(void)
027A           1106   ;        -----------------------------------------
027A           1107   ;         function ADC_Read
027A           1108   ;        -----------------------------------------
027A           1109   _ADC_Read:
027A           1110   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:241: ADC0CN0 |= 0x10; // Start an ADC conversion
027A 43E810    1111            orl     _ADC0CN0,#0x10
027D           1112   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:244: while ((ADC0CN0 & 0x20) == 0x00);
027D           1113   L013001?:
027D E5E8      1114            mov     a,_ADC0CN0
027F 30E500    1115            jnb     acc.5,L013001?
0282           1116   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:245: ADC0CN0 &= ~0x20; // Clear the conversion complete flag
0282 53E8DF    1117            anl     _ADC0CN0,#0xDF
0285           1118   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:247: ans = ADC0H;
0285           1119   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:248: ans <<= 8;
0285 ABBE      1120            mov     r3,_ADC0H
0287 7A00      1121            mov     r2,#0x00
0289           1122   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:249: ans |= ADC0L;
0289 ACBD      1123            mov     r4,_ADC0L
028B 7D00      1124            mov     r5,#0x00
028D EC        1125            mov     a,r4
028E 4202      1126            orl     ar2,a
0290 ED        1127            mov     a,r5
0291 4203      1128            orl     ar3,a
0293           1129   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:251: return ans;
0293 8A82      1130            mov     dpl,r2
0295 8B83      1131            mov     dph,r3
0297 22        1132            ret
0298           1133   ;------------------------------------------------------------
0298           1134   ;Allocation info for local variables in function 'GPIO_Init'
0298           1135   ;------------------------------------------------------------
0298           1136   ;------------------------------------------------------------
0298           1137   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:254: void GPIO_Init(void)
0298           1138   ;        -----------------------------------------
0298           1139   ;         function GPIO_Init
0298           1140   ;        -----------------------------------------
0298           1141   _GPIO_Init:
0298           1142   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:257: PHASE_A = 1;
0298 D2B2      1143            setb    _P3_2
029A           1144   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:258: PHASE_B = 1;
029A D2B3      1145            setb    _P3_3
029C           1146   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:259: PHASE_SIGN = 1;
029C D2B7      1147            setb    _P3_7
029E           1148   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:260: P3MDOUT = 0x00;
029E 759C00    1149            mov     _P3MDOUT,#0x00
02A1           1150   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:261: P3MDIN = 0x8c;
02A1 75F48C    1151            mov     _P3MDIN,#0x8C
02A4 22        1152            ret
02A5           1153   ;------------------------------------------------------------
02A5           1154   ;Allocation info for local variables in function 'get_phase'
02A5           1155   ;------------------------------------------------------------
02A5           1156   ;i                         Allocated to registers r4 r5 
02A5           1157   ;phase                     Allocated to registers r2 r3 
02A5           1158   ;------------------------------------------------------------
02A5           1159   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:265: uint16_t get_phase(void)
02A5           1160   ;        -----------------------------------------
02A5           1161   ;         function get_phase
02A5           1162   ;        -----------------------------------------
02A5           1163   _get_phase:
02A5           1164   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:268: uint16_t phase = 0;
02A5 7A00      1165            mov     r2,#0x00
02A7 7B00      1166            mov     r3,#0x00
02A9           1167   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:269: for(i = 0; i < 4096; i++){
02A9 7C00      1168            mov     r4,#0x00
02AB 7D00      1169            mov     r5,#0x00
02AD           1170   L015001?:
02AD 74F0      1171            mov     a,#0x100 - 0x10
02AF 2D        1172            add     a,r5
02B0 4000      1173            jc      L015004?
02B2           1174   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:270: phase += PHASE_A ^ PHASE_B;
02B2 A2B2      1175            mov     c,_P3_2
02B4 E4        1176            clr     a
02B5 33        1177            rlc     a
02B6 FE        1178            mov     r6,a
02B7 A2B3      1179            mov     c,_P3_3
02B9 E4        1180            clr     a
02BA 33        1181            rlc     a
02BB 6206      1182            xrl     ar6,a
02BD EE        1183            mov     a,r6
02BE 33        1184            rlc     a
02BF 95E0      1185            subb    a,acc
02C1 FF        1186            mov     r7,a
02C2 EE        1187            mov     a,r6
02C3 2A        1188            add     a,r2
02C4 FA        1189            mov     r2,a
02C5 EF        1190            mov     a,r7
02C6 3B        1191            addc    a,r3
02C7 FB        1192            mov     r3,a
02C8           1193   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:269: for(i = 0; i < 4096; i++){
02C8 0C        1194            inc     r4
02C9 BC0040    1195            cjne    r4,#0x00,L015001?
02CC 0D        1196            inc     r5
02CD 8000      1197            sjmp    L015001?
02CF           1198   L015004?:
02CF           1199   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:272: return phase;
02CF 8A82      1200            mov     dpl,r2
02D1 8B83      1201            mov     dph,r3
02D3 22        1202            ret
02D4           1203   ;------------------------------------------------------------
02D4           1204   ;Allocation info for local variables in function 'main'
02D4           1205   ;------------------------------------------------------------
02D4           1206   ;buff                      Allocated with name '_main_buff_1_79'
02D4           1207   ;result                    Allocated to registers 
02D4           1208   ;capacitance               Allocated to registers r2 r3 r4 r5 
02D4           1209   ;sloc0                     Allocated with name '_main_sloc0_1_0'
02D4           1210   ;sloc1                     Allocated with name '_main_sloc1_1_0'
02D4           1211   ;voltage                   Allocated with name '_main_voltage_1_79'
02D4           1212   ;angle                     Allocated with name '_main_angle_1_79'
02D4           1213   ;vr                        Allocated with name '_main_vr_1_79'
02D4           1214   ;vi                        Allocated with name '_main_vi_1_79'
02D4           1215   ;cr                        Allocated with name '_main_cr_1_79'
02D4           1216   ;ci                        Allocated with name '_main_ci_1_79'
02D4           1217   ;zr                        Allocated with name '_main_zr_1_79'
02D4           1218   ;zi                        Allocated to registers r2 r3 r4 r5 
02D4           1219   ;------------------------------------------------------------
02D4           1220   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:276: void main (void)
02D4           1221   ;        -----------------------------------------
02D4           1222   ;         function main
02D4           1223   ;        -----------------------------------------
02D4           1224   _main:
02D4           1225   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:287: GPIO_Init();
02D4 120000    1226            lcall   _GPIO_Init
02D7           1227   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:290: LCD_4BIT();
02D7 120000    1228            lcall   _LCD_4BIT
02DA           1229   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:291: ADC_Init();
02DA 120000    1230            lcall   _ADC_Init
02DD           1231   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:293: LCDprint("LCD 4-bit test:", 1, 1);
02DD 75C001    1232            mov     _LCDprint_PARM_2,#0x01
02E0 D230      1233            setb    _LCDprint_PARM_3
02E2 90BEC0    1234            mov     dptr,#__str_0
02E5 75F080    1235            mov     b,#0x80
02E8 120000    1236            lcall   _LCDprint
02EB           1237   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:294: LCDprint("qwedqeee", 2, 1);
02EB 75C002    1238            mov     _LCDprint_PARM_2,#0x02
02EE D230      1239            setb    _LCDprint_PARM_3
02F0 90BF00    1240            mov     dptr,#__str_1
02F3 75F080    1241            mov     b,#0x80
02F6 120000    1242            lcall   _LCDprint
02F9           1243   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:295: while(1)
02F9           1244   L016015?:
02F9           1245   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:297: result = ADC_Read();
02F9 120000    1246            lcall   _ADC_Read
02FC           1247   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:299: voltage = (float)result * VREF / (4*16383.0f);
02FC 120000    1248            lcall   ___uint2fs
02FF AA82      1249            mov     r2,dpl
0301 AB83      1250            mov     r3,dph
0303 ACF0      1251            mov     r4,b
0305 FD        1252            mov     r5,a
0306 C002      1253            push    ar2
0308 C003      1254            push    ar3
030A C004      1255            push    ar4
030C C005      1256            push    ar5
030E 903333    1257            mov     dptr,#0x3333
0311 75F0D3    1258            mov     b,#0xD3
0314 743F      1259            mov     a,#0x3F
0316 120000    1260            lcall   ___fsmul
0319 AA82      1261            mov     r2,dpl
031B AB83      1262            mov     r3,dph
031D ACF0      1263            mov     r4,b
031F FD        1264            mov     r5,a
0320 E581      1265            mov     a,sp
0322 24FC      1266            add     a,#0xfc
0324 F581      1267            mov     sp,a
0326 E4        1268            clr     a
0327 C0E0      1269            push    acc
0329 74FC      1270            mov     a,#0xFC
032B C0E0      1271            push    acc
032D 747F      1272            mov     a,#0x7F
032F C0E0      1273            push    acc
0331 7447      1274            mov     a,#0x47
0333 C0E0      1275            push    acc
0335 8A82      1276            mov     dpl,r2
0337 8B83      1277            mov     dph,r3
0339 8CF0      1278            mov     b,r4
033B ED        1279            mov     a,r5
033C 120000    1280            lcall   ___fsdiv
033F 78B0      1281            mov     r0,#_main_voltage_1_79
0341 A682      1282            mov     @r0,dpl
0343 08        1283            inc     r0
0344 A683      1284            mov     @r0,dph
0346 08        1285            inc     r0
0347 A6F0      1286            mov     @r0,b
0349 08        1287            inc     r0
034A F6        1288            mov     @r0,a
034B E581      1289            mov     a,sp
034D 24FC      1290            add     a,#0xfc
034F F581      1291            mov     sp,a
0351           1292   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:308: angle= (float)get_phase() * PI / 4096.0f;
0351 120000    1293            lcall   _get_phase
0354 120000    1294            lcall   ___uint2fs
0357 AE82      1295            mov     r6,dpl
0359 AF83      1296            mov     r7,dph
035B AAF0      1297            mov     r2,b
035D FB        1298            mov     r3,a
035E C006      1299            push    ar6
0360 C007      1300            push    ar7
0362 C002      1301            push    ar2
0364 C003      1302            push    ar3
0366 900FDB    1303            mov     dptr,#0x0FDB
0369 75F049    1304            mov     b,#0x49
036C 7440      1305            mov     a,#0x40
036E 120000    1306            lcall   ___fsmul
0371 AA82      1307            mov     r2,dpl
0373 AB83      1308            mov     r3,dph
0375 ACF0      1309            mov     r4,b
0377 FD        1310            mov     r5,a
0378 E581      1311            mov     a,sp
037A 24FC      1312            add     a,#0xfc
037C F581      1313            mov     sp,a
037E E4        1314            clr     a
037F C0E0      1315            push    acc
0381 C0E0      1316            push    acc
0383 7480      1317            mov     a,#0x80
0385 C0E0      1318            push    acc
0387 7445      1319            mov     a,#0x45
0389 C0E0      1320            push    acc
038B 8A82      1321            mov     dpl,r2
038D 8B83      1322            mov     dph,r3
038F 8CF0      1323            mov     b,r4
0391 ED        1324            mov     a,r5
0392 120000    1325            lcall   ___fsdiv
0395 7800      1326            mov     r0,#_main_angle_1_79
0397 A682      1327            mov     @r0,dpl
0399 08        1328            inc     r0
039A A683      1329            mov     @r0,dph
039C 08        1330            inc     r0
039D A6F0      1331            mov     @r0,b
039F 08        1332            inc     r0
03A0 F6        1333            mov     @r0,a
03A1 E581      1334            mov     a,sp
03A3 24FC      1335            add     a,#0xfc
03A5 F581      1336            mov     sp,a
03A7           1337   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:309: if( PHASE_SIGN == 0) angle = -angle;
03A7 20B780    1338            jb      _P3_7,L016002?
03AA 7800      1339            mov     r0,#_main_angle_1_79
03AC E6        1340            mov     a,@r0
03AD F6        1341            mov     @r0,a
03AE 08        1342            inc     r0
03AF E6        1343            mov     a,@r0
03B0 F6        1344            mov     @r0,a
03B1 08        1345            inc     r0
03B2 E6        1346            mov     a,@r0
03B3 F6        1347            mov     @r0,a
03B4 08        1348            inc     r0
03B5 E6        1349            mov     a,@r0
03B6 B2E7      1350            cpl     acc.7
03B8 F6        1351            mov     @r0,a
03B9           1352   L016002?:
03B9           1353   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:312: vr = voltage * cosf(angle);
03B9 7800      1354            mov     r0,#_main_angle_1_79
03BB 8682      1355            mov     dpl,@r0
03BD 08        1356            inc     r0
03BE 8683      1357            mov     dph,@r0
03C0 08        1358            inc     r0
03C1 86F0      1359            mov     b,@r0
03C3 08        1360            inc     r0
03C4 E6        1361            mov     a,@r0
03C5 120000    1362            lcall   _cosf
03C8 AE82      1363            mov     r6,dpl
03CA AF83      1364            mov     r7,dph
03CC AAF0      1365            mov     r2,b
03CE FB        1366            mov     r3,a
03CF C006      1367            push    ar6
03D1 C007      1368            push    ar7
03D3 C002      1369            push    ar2
03D5 C003      1370            push    ar3
03D7 78B0      1371            mov     r0,#_main_voltage_1_79
03D9 8682      1372            mov     dpl,@r0
03DB 08        1373            inc     r0
03DC 8683      1374            mov     dph,@r0
03DE 08        1375            inc     r0
03DF 86F0      1376            mov     b,@r0
03E1 08        1377            inc     r0
03E2 E6        1378            mov     a,@r0
03E3 120000    1379            lcall   ___fsmul
03E6 7840      1380            mov     r0,#_main_vr_1_79
03E8 A682      1381            mov     @r0,dpl
03EA 08        1382            inc     r0
03EB A683      1383            mov     @r0,dph
03ED 08        1384            inc     r0
03EE A6F0      1385            mov     @r0,b
03F0 08        1386            inc     r0
03F1 F6        1387            mov     @r0,a
03F2 E581      1388            mov     a,sp
03F4 24FC      1389            add     a,#0xfc
03F6 F581      1390            mov     sp,a
03F8           1391   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:313: vi = voltage * sinf(angle);
03F8 7800      1392            mov     r0,#_main_angle_1_79
03FA 8682      1393            mov     dpl,@r0
03FC 08        1394            inc     r0
03FD 8683      1395            mov     dph,@r0
03FF 08        1396            inc     r0
0400 86F0      1397            mov     b,@r0
0402 08        1398            inc     r0
0403 E6        1399            mov     a,@r0
0404 120000    1400            lcall   _sinf
0407 AE82      1401            mov     r6,dpl
0409 AF83      1402            mov     r7,dph
040B AAF0      1403            mov     r2,b
040D FB        1404            mov     r3,a
040E C006      1405            push    ar6
0410 C007      1406            push    ar7
0412 C002      1407            push    ar2
0414 C003      1408            push    ar3
0416 78B0      1409            mov     r0,#_main_voltage_1_79
0418 8682      1410            mov     dpl,@r0
041A 08        1411            inc     r0
041B 8683      1412            mov     dph,@r0
041D 08        1413            inc     r0
041E 86F0      1414            mov     b,@r0
0420 08        1415            inc     r0
0421 E6        1416            mov     a,@r0
0422 120000    1417            lcall   ___fsmul
0425 7880      1418            mov     r0,#_main_vi_1_79
0427 A682      1419            mov     @r0,dpl
0429 08        1420            inc     r0
042A A683      1421            mov     @r0,dph
042C 08        1422            inc     r0
042D A6F0      1423            mov     @r0,b
042F 08        1424            inc     r0
0430 F6        1425            mov     @r0,a
0431 E581      1426            mov     a,sp
0433 24FC      1427            add     a,#0xfc
0435 F581      1428            mov     sp,a
0437           1429   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:316: cr = (OPEN_CIRCUIT_VOLTAGE - vr) / DIVISOR;
0437 7840      1430            mov     r0,#_main_vr_1_79
0439 E6        1431            mov     a,@r0
043A C0E0      1432            push    acc
043C 08        1433            inc     r0
043D E6        1434            mov     a,@r0
043E C0E0      1435            push    acc
0440 08        1436            inc     r0
0441 E6        1437            mov     a,@r0
0442 C0E0      1438            push    acc
0444 08        1439            inc     r0
0445 E6        1440            mov     a,@r0
0446 C0E0      1441            push    acc
0448 900000    1442            mov     dptr,#0x0000
044B 75F0B0    1443            mov     b,#0xB0
044E 743F      1444            mov     a,#0x3F
0450 120000    1445            lcall   ___fssub
0453 AE82      1446            mov     r6,dpl
0455 AF83      1447            mov     r7,dph
0457 AAF0      1448            mov     r2,b
0459 FB        1449            mov     r3,a
045A E581      1450            mov     a,sp
045C 24FC      1451            add     a,#0xfc
045E F581      1452            mov     sp,a
0460 E4        1453            clr     a
0461 C0E0      1454            push    acc
0463 7460      1455            mov     a,#0x60
0465 C0E0      1456            push    acc
0467 749F      1457            mov     a,#0x9F
0469 C0E0      1458            push    acc
046B 7445      1459            mov     a,#0x45
046D C0E0      1460            push    acc
046F 8E82      1461            mov     dpl,r6
0471 8F83      1462            mov     dph,r7
0473 8AF0      1463            mov     b,r2
0475 EB        1464            mov     a,r3
0476 120000    1465            lcall   ___fsdiv
0479 78C0      1466            mov     r0,#_main_cr_1_79
047B A682      1467            mov     @r0,dpl
047D 08        1468            inc     r0
047E A683      1469            mov     @r0,dph
0480 08        1470            inc     r0
0481 A6F0      1471            mov     @r0,b
0483 08        1472            inc     r0
0484 F6        1473            mov     @r0,a
0485 E581      1474            mov     a,sp
0487 24FC      1475            add     a,#0xfc
0489 F581      1476            mov     sp,a
048B           1477   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:317: ci = -vi / DIVISOR;
048B 7880      1478            mov     r0,#_main_vi_1_79
048D 8606      1479            mov     ar6,@r0
048F 08        1480            inc     r0
0490 8607      1481            mov     ar7,@r0
0492 08        1482            inc     r0
0493 8602      1483            mov     ar2,@r0
0495 08        1484            inc     r0
0496 E6        1485            mov     a,@r0
0497 B2E7      1486            cpl     acc.7
0499 FB        1487            mov     r3,a
049A E4        1488            clr     a
049B C0E0      1489            push    acc
049D 7460      1490            mov     a,#0x60
049F C0E0      1491            push    acc
04A1 749F      1492            mov     a,#0x9F
04A3 C0E0      1493            push    acc
04A5 7445      1494            mov     a,#0x45
04A7 C0E0      1495            push    acc
04A9 8E82      1496            mov     dpl,r6
04AB 8F83      1497            mov     dph,r7
04AD 8AF0      1498            mov     b,r2
04AF EB        1499            mov     a,r3
04B0 120000    1500            lcall   ___fsdiv
04B3 7800      1501            mov     r0,#_main_ci_1_79
04B5 A682      1502            mov     @r0,dpl
04B7 08        1503            inc     r0
04B8 A683      1504            mov     @r0,dph
04BA 08        1505            inc     r0
04BB A6F0      1506            mov     @r0,b
04BD 08        1507            inc     r0
04BE F6        1508            mov     @r0,a
04BF E581      1509            mov     a,sp
04C1 24FC      1510            add     a,#0xfc
04C3 F581      1511            mov     sp,a
04C5           1512   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:320: zr = (vr * cr + vi * ci) / (cr * cr + ci * ci) * Z_CAL;
04C5 78C0      1513            mov     r0,#_main_cr_1_79
04C7 E6        1514            mov     a,@r0
04C8 C0E0      1515            push    acc
04CA 08        1516            inc     r0
04CB E6        1517            mov     a,@r0
04CC C0E0      1518            push    acc
04CE 08        1519            inc     r0
04CF E6        1520            mov     a,@r0
04D0 C0E0      1521            push    acc
04D2 08        1522            inc     r0
04D3 E6        1523            mov     a,@r0
04D4 C0E0      1524            push    acc
04D6 7840      1525            mov     r0,#_main_vr_1_79
04D8 8682      1526            mov     dpl,@r0
04DA 08        1527            inc     r0
04DB 8683      1528            mov     dph,@r0
04DD 08        1529            inc     r0
04DE 86F0      1530            mov     b,@r0
04E0 08        1531            inc     r0
04E1 E6        1532            mov     a,@r0
04E2 120000    1533            lcall   ___fsmul
04E5 858220    1534            mov     _main_sloc0_1_0,dpl
04E8 858321    1535            mov     (_main_sloc0_1_0 + 1),dph
04EB 85F022    1536            mov     (_main_sloc0_1_0 + 2),b
04EE F523      1537            mov     (_main_sloc0_1_0 + 3),a
04F0 E581      1538            mov     a,sp
04F2 24FC      1539            add     a,#0xfc
04F4 F581      1540            mov     sp,a
04F6 7800      1541            mov     r0,#_main_ci_1_79
04F8 E6        1542            mov     a,@r0
04F9 C0E0      1543            push    acc
04FB 08        1544            inc     r0
04FC E6        1545            mov     a,@r0
04FD C0E0      1546            push    acc
04FF 08        1547            inc     r0
0500 E6        1548            mov     a,@r0
0501 C0E0      1549            push    acc
0503 08        1550            inc     r0
0504 E6        1551            mov     a,@r0
0505 C0E0      1552            push    acc
0507 7880      1553            mov     r0,#_main_vi_1_79
0509 8682      1554            mov     dpl,@r0
050B 08        1555            inc     r0
050C 8683      1556            mov     dph,@r0
050E 08        1557            inc     r0
050F 86F0      1558            mov     b,@r0
0511 08        1559            inc     r0
0512 E6        1560            mov     a,@r0
0513 120000    1561            lcall   ___fsmul
0516 AC82      1562            mov     r4,dpl
0518 AD83      1563            mov     r5,dph
051A AAF0      1564            mov     r2,b
051C FB        1565            mov     r3,a
051D E581      1566            mov     a,sp
051F 24FC      1567            add     a,#0xfc
0521 F581      1568            mov     sp,a
0523 C004      1569            push    ar4
0525 C005      1570            push    ar5
0527 C002      1571            push    ar2
0529 C003      1572            push    ar3
052B 852082    1573            mov     dpl,_main_sloc0_1_0
052E 852183    1574            mov     dph,(_main_sloc0_1_0 + 1)
0531 8522F0    1575            mov     b,(_main_sloc0_1_0 + 2)
0534 E523      1576            mov     a,(_main_sloc0_1_0 + 3)
0536 120000    1577            lcall   ___fsadd
0539 858220    1578            mov     _main_sloc0_1_0,dpl
053C 858321    1579            mov     (_main_sloc0_1_0 + 1),dph
053F 85F022    1580            mov     (_main_sloc0_1_0 + 2),b
0542 F523      1581            mov     (_main_sloc0_1_0 + 3),a
0544 E581      1582            mov     a,sp
0546 24FC      1583            add     a,#0xfc
0548 F581      1584            mov     sp,a
054A 78C0      1585            mov     r0,#_main_cr_1_79
054C E6        1586            mov     a,@r0
054D C0E0      1587            push    acc
054F 08        1588            inc     r0
0550 E6        1589            mov     a,@r0
0551 C0E0      1590            push    acc
0553 08        1591            inc     r0
0554 E6        1592            mov     a,@r0
0555 C0E0      1593            push    acc
0557 08        1594            inc     r0
0558 E6        1595            mov     a,@r0
0559 C0E0      1596            push    acc
055B 78C0      1597            mov     r0,#_main_cr_1_79
055D 8682      1598            mov     dpl,@r0
055F 08        1599            inc     r0
0560 8683      1600            mov     dph,@r0
0562 08        1601            inc     r0
0563 86F0      1602            mov     b,@r0
0565 08        1603            inc     r0
0566 E6        1604            mov     a,@r0
0567 120000    1605            lcall   ___fsmul
056A 858260    1606            mov     _main_sloc1_1_0,dpl
056D 858361    1607            mov     (_main_sloc1_1_0 + 1),dph
0570 85F062    1608            mov     (_main_sloc1_1_0 + 2),b
0573 F563      1609            mov     (_main_sloc1_1_0 + 3),a
0575 E581      1610            mov     a,sp
0577 24FC      1611            add     a,#0xfc
0579 F581      1612            mov     sp,a
057B 7800      1613            mov     r0,#_main_ci_1_79
057D E6        1614            mov     a,@r0
057E C0E0      1615            push    acc
0580 08        1616            inc     r0
0581 E6        1617            mov     a,@r0
0582 C0E0      1618            push    acc
0584 08        1619            inc     r0
0585 E6        1620            mov     a,@r0
0586 C0E0      1621            push    acc
0588 08        1622            inc     r0
0589 E6        1623            mov     a,@r0
058A C0E0      1624            push    acc
058C 7800      1625            mov     r0,#_main_ci_1_79
058E 8682      1626            mov     dpl,@r0
0590 08        1627            inc     r0
0591 8683      1628            mov     dph,@r0
0593 08        1629            inc     r0
0594 86F0      1630            mov     b,@r0
0596 08        1631            inc     r0
0597 E6        1632            mov     a,@r0
0598 120000    1633            lcall   ___fsmul
059B AC82      1634            mov     r4,dpl
059D AD83      1635            mov     r5,dph
059F AAF0      1636            mov     r2,b
05A1 FB        1637            mov     r3,a
05A2 E581      1638            mov     a,sp
05A4 24FC      1639            add     a,#0xfc
05A6 F581      1640            mov     sp,a
05A8 C004      1641            push    ar4
05AA C005      1642            push    ar5
05AC C002      1643            push    ar2
05AE C003      1644            push    ar3
05B0 856082    1645            mov     dpl,_main_sloc1_1_0
05B3 856183    1646            mov     dph,(_main_sloc1_1_0 + 1)
05B6 8562F0    1647            mov     b,(_main_sloc1_1_0 + 2)
05B9 E563      1648            mov     a,(_main_sloc1_1_0 + 3)
05BB 120000    1649            lcall   ___fsadd
05BE 858260    1650            mov     _main_sloc1_1_0,dpl
05C1 858361    1651            mov     (_main_sloc1_1_0 + 1),dph
05C4 85F062    1652            mov     (_main_sloc1_1_0 + 2),b
05C7 F563      1653            mov     (_main_sloc1_1_0 + 3),a
05C9 E581      1654            mov     a,sp
05CB 24FC      1655            add     a,#0xfc
05CD F581      1656            mov     sp,a
05CF C060      1657            push    _main_sloc1_1_0
05D1 C061      1658            push    (_main_sloc1_1_0 + 1)
05D3 C062      1659            push    (_main_sloc1_1_0 + 2)
05D5 C063      1660            push    (_main_sloc1_1_0 + 3)
05D7 852082    1661            mov     dpl,_main_sloc0_1_0
05DA 852183    1662            mov     dph,(_main_sloc0_1_0 + 1)
05DD 8522F0    1663            mov     b,(_main_sloc0_1_0 + 2)
05E0 E523      1664            mov     a,(_main_sloc0_1_0 + 3)
05E2 120000    1665            lcall   ___fsdiv
05E5 AE82      1666            mov     r6,dpl
05E7 AF83      1667            mov     r7,dph
05E9 AAF0      1668            mov     r2,b
05EB FB        1669            mov     r3,a
05EC E581      1670            mov     a,sp
05EE 24FC      1671            add     a,#0xfc
05F0 F581      1672            mov     sp,a
05F2 C006      1673            push    ar6
05F4 C007      1674            push    ar7
05F6 C002      1675            push    ar2
05F8 C003      1676            push    ar3
05FA 90CCCD    1677            mov     dptr,#0xCCCD
05FD 75F04C    1678            mov     b,#0x4C
0600 743F      1679            mov     a,#0x3F
0602 120000    1680            lcall   ___fsmul
0605 7840      1681            mov     r0,#_main_zr_1_79
0607 A682      1682            mov     @r0,dpl
0609 08        1683            inc     r0
060A A683      1684            mov     @r0,dph
060C 08        1685            inc     r0
060D A6F0      1686            mov     @r0,b
060F 08        1687            inc     r0
0610 F6        1688            mov     @r0,a
0611 E581      1689            mov     a,sp
0613 24FC      1690            add     a,#0xfc
0615 F581      1691            mov     sp,a
0617           1692   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:321: zi = (vi * cr - vr * ci) / (cr * cr + ci * ci) * Z_CAL;
0617 78C0      1693            mov     r0,#_main_cr_1_79
0619 E6        1694            mov     a,@r0
061A C0E0      1695            push    acc
061C 08        1696            inc     r0
061D E6        1697            mov     a,@r0
061E C0E0      1698            push    acc
0620 08        1699            inc     r0
0621 E6        1700            mov     a,@r0
0622 C0E0      1701            push    acc
0624 08        1702            inc     r0
0625 E6        1703            mov     a,@r0
0626 C0E0      1704            push    acc
0628 7880      1705            mov     r0,#_main_vi_1_79
062A 8682      1706            mov     dpl,@r0
062C 08        1707            inc     r0
062D 8683      1708            mov     dph,@r0
062F 08        1709            inc     r0
0630 86F0      1710            mov     b,@r0
0632 08        1711            inc     r0
0633 E6        1712            mov     a,@r0
0634 120000    1713            lcall   ___fsmul
0637 858220    1714            mov     _main_sloc0_1_0,dpl
063A 858321    1715            mov     (_main_sloc0_1_0 + 1),dph
063D 85F022    1716            mov     (_main_sloc0_1_0 + 2),b
0640 F523      1717            mov     (_main_sloc0_1_0 + 3),a
0642 E581      1718            mov     a,sp
0644 24FC      1719            add     a,#0xfc
0646 F581      1720            mov     sp,a
0648 7800      1721            mov     r0,#_main_ci_1_79
064A E6        1722            mov     a,@r0
064B C0E0      1723            push    acc
064D 08        1724            inc     r0
064E E6        1725            mov     a,@r0
064F C0E0      1726            push    acc
0651 08        1727            inc     r0
0652 E6        1728            mov     a,@r0
0653 C0E0      1729            push    acc
0655 08        1730            inc     r0
0656 E6        1731            mov     a,@r0
0657 C0E0      1732            push    acc
0659 7840      1733            mov     r0,#_main_vr_1_79
065B 8682      1734            mov     dpl,@r0
065D 08        1735            inc     r0
065E 8683      1736            mov     dph,@r0
0660 08        1737            inc     r0
0661 86F0      1738            mov     b,@r0
0663 08        1739            inc     r0
0664 E6        1740            mov     a,@r0
0665 120000    1741            lcall   ___fsmul
0668 AC82      1742            mov     r4,dpl
066A AD83      1743            mov     r5,dph
066C AAF0      1744            mov     r2,b
066E FB        1745            mov     r3,a
066F E581      1746            mov     a,sp
0671 24FC      1747            add     a,#0xfc
0673 F581      1748            mov     sp,a
0675 C004      1749            push    ar4
0677 C005      1750            push    ar5
0679 C002      1751            push    ar2
067B C003      1752            push    ar3
067D 852082    1753            mov     dpl,_main_sloc0_1_0
0680 852183    1754            mov     dph,(_main_sloc0_1_0 + 1)
0683 8522F0    1755            mov     b,(_main_sloc0_1_0 + 2)
0686 E523      1756            mov     a,(_main_sloc0_1_0 + 3)
0688 120000    1757            lcall   ___fssub
068B AA82      1758            mov     r2,dpl
068D AB83      1759            mov     r3,dph
068F ACF0      1760            mov     r4,b
0691 FD        1761            mov     r5,a
0692 E581      1762            mov     a,sp
0694 24FC      1763            add     a,#0xfc
0696 F581      1764            mov     sp,a
0698 C060      1765            push    _main_sloc1_1_0
069A C061      1766            push    (_main_sloc1_1_0 + 1)
069C C062      1767            push    (_main_sloc1_1_0 + 2)
069E C063      1768            push    (_main_sloc1_1_0 + 3)
06A0 8A82      1769            mov     dpl,r2
06A2 8B83      1770            mov     dph,r3
06A4 8CF0      1771            mov     b,r4
06A6 ED        1772            mov     a,r5
06A7 120000    1773            lcall   ___fsdiv
06AA AA82      1774            mov     r2,dpl
06AC AB83      1775            mov     r3,dph
06AE ACF0      1776            mov     r4,b
06B0 FD        1777            mov     r5,a
06B1 E581      1778            mov     a,sp
06B3 24FC      1779            add     a,#0xfc
06B5 F581      1780            mov     sp,a
06B7 C002      1781            push    ar2
06B9 C003      1782            push    ar3
06BB C004      1783            push    ar4
06BD C005      1784            push    ar5
06BF 90CCCD    1785            mov     dptr,#0xCCCD
06C2 75F04C    1786            mov     b,#0x4C
06C5 743F      1787            mov     a,#0x3F
06C7 120000    1788            lcall   ___fsmul
06CA AA82      1789            mov     r2,dpl
06CC AB83      1790            mov     r3,dph
06CE ACF0      1791            mov     r4,b
06D0 FD        1792            mov     r5,a
06D1 E581      1793            mov     a,sp
06D3 24FC      1794            add     a,#0xfc
06D5 F581      1795            mov     sp,a
06D7           1796   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:325: sprintf(buff, "ZR: %.3f", zr);
06D7 C002      1797            push    ar2
06D9 C003      1798            push    ar3
06DB C004      1799            push    ar4
06DD C005      1800            push    ar5
06DF 7840      1801            mov     r0,#_main_zr_1_79
06E1 E6        1802            mov     a,@r0
06E2 C0E0      1803            push    acc
06E4 08        1804            inc     r0
06E5 E6        1805            mov     a,@r0
06E6 C0E0      1806            push    acc
06E8 08        1807            inc     r0
06E9 E6        1808            mov     a,@r0
06EA C0E0      1809            push    acc
06EC 08        1810            inc     r0
06ED E6        1811            mov     a,@r0
06EE C0E0      1812            push    acc
06F0 74C0      1813            mov     a,#__str_2
06F2 C0E0      1814            push    acc
06F4 74C1      1815            mov     a,#(__str_2 >> 8)
06F6 C0E0      1816            push    acc
06F8 7480      1817            mov     a,#0x80
06FA C0E0      1818            push    acc
06FC 74E0      1819            mov     a,#_main_buff_1_79
06FE C0E0      1820            push    acc
0700 74B3      1821            mov     a,#(_main_buff_1_79 >> 8)
0702 C0E0      1822            push    acc
0704 7440      1823            mov     a,#0x40
0706 C0E0      1824            push    acc
0708 120000    1825            lcall   _sprintf
070B E581      1826            mov     a,sp
070D 24F6      1827            add     a,#0xf6
070F F581      1828            mov     sp,a
0711           1829   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:326: LCDprint(buff, 1, 1);
0711 75C001    1830            mov     _LCDprint_PARM_2,#0x01
0714 D230      1831            setb    _LCDprint_PARM_3
0716 90B3E0    1832            mov     dptr,#_main_buff_1_79
0719 75F040    1833            mov     b,#0x40
071C 120000    1834            lcall   _LCDprint
071F D005      1835            pop     ar5
0721 D004      1836            pop     ar4
0723 D003      1837            pop     ar3
0725 D002      1838            pop     ar2
0727           1839   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:332: if( zi > 0.0 ){
0727 C002      1840            push    ar2
0729 C003      1841            push    ar3
072B C004      1842            push    ar4
072D C005      1843            push    ar5
072F E4        1844            clr     a
0730 C0E0      1845            push    acc
0732 C0E0      1846            push    acc
0734 C0E0      1847            push    acc
0736 C0E0      1848            push    acc
0738 8A82      1849            mov     dpl,r2
073A 8B83      1850            mov     dph,r3
073C 8CF0      1851            mov     b,r4
073E ED        1852            mov     a,r5
073F 120000    1853            lcall   ___fsgt
0742 AE82      1854            mov     r6,dpl
0744 E581      1855            mov     a,sp
0746 24FC      1856            add     a,#0xfc
0748 F581      1857            mov     sp,a
074A D005      1858            pop     ar5
074C D004      1859            pop     ar4
074E D003      1860            pop     ar3
0750 D002      1861            pop     ar2
0752 EE        1862            mov     a,r6
0753 7000      1863            jnz     L016026?
0755 020000    1864            ljmp    L016012?
0758           1865   L016026?:
0758           1866   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:333: sprintf(buff, "L: %.3fmH", zi / OMEGA * 1000.0f);
0758 742A      1867            mov     a,#0x2A
075A C0E0      1868            push    acc
075C 74DD      1869            mov     a,#0xDD
075E C0E0      1870            push    acc
0760 740E      1871            mov     a,#0x0E
0762 C0E0      1872            push    acc
0764 7446      1873            mov     a,#0x46
0766 C0E0      1874            push    acc
0768 8A82      1875            mov     dpl,r2
076A 8B83      1876            mov     dph,r3
076C 8CF0      1877            mov     b,r4
076E ED        1878            mov     a,r5
076F 120000    1879            lcall   ___fsdiv
0772 858260    1880            mov     _main_sloc1_1_0,dpl
0775 858361    1881            mov     (_main_sloc1_1_0 + 1),dph
0778 85F062    1882            mov     (_main_sloc1_1_0 + 2),b
077B F563      1883            mov     (_main_sloc1_1_0 + 3),a
077D E581      1884            mov     a,sp
077F 24FC      1885            add     a,#0xfc
0781 F581      1886            mov     sp,a
0783 C060      1887            push    _main_sloc1_1_0
0785 C061      1888            push    (_main_sloc1_1_0 + 1)
0787 C062      1889            push    (_main_sloc1_1_0 + 2)
0789 C063      1890            push    (_main_sloc1_1_0 + 3)
078B 900000    1891            mov     dptr,#0x0000
078E 75F07A    1892            mov     b,#0x7A
0791 7444      1893            mov     a,#0x44
0793 120000    1894            lcall   ___fsmul
0796 858260    1895            mov     _main_sloc1_1_0,dpl
0799 858361    1896            mov     (_main_sloc1_1_0 + 1),dph
079C 85F062    1897            mov     (_main_sloc1_1_0 + 2),b
079F F563      1898            mov     (_main_sloc1_1_0 + 3),a
07A1 E581      1899            mov     a,sp
07A3 24FC      1900            add     a,#0xfc
07A5 F581      1901            mov     sp,a
07A7 C060      1902            push    _main_sloc1_1_0
07A9 C061      1903            push    (_main_sloc1_1_0 + 1)
07AB C062      1904            push    (_main_sloc1_1_0 + 2)
07AD C063      1905            push    (_main_sloc1_1_0 + 3)
07AF 7400      1906            mov     a,#__str_3
07B1 C0E0      1907            push    acc
07B3 74C3      1908            mov     a,#(__str_3 >> 8)
07B5 C0E0      1909            push    acc
07B7 7480      1910            mov     a,#0x80
07B9 C0E0      1911            push    acc
07BB 74E0      1912            mov     a,#_main_buff_1_79
07BD C0E0      1913            push    acc
07BF 74B3      1914            mov     a,#(_main_buff_1_79 >> 8)
07C1 C0E0      1915            push    acc
07C3 7440      1916            mov     a,#0x40
07C5 C0E0      1917            push    acc
07C7 120000    1918            lcall   _sprintf
07CA E581      1919            mov     a,sp
07CC 24F6      1920            add     a,#0xf6
07CE F581      1921            mov     sp,a
07D0           1922   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:334: LCDprint(buff, 2, 1);
07D0 75C002    1923            mov     _LCDprint_PARM_2,#0x02
07D3 D230      1924            setb    _LCDprint_PARM_3
07D5 90B3E0    1925            mov     dptr,#_main_buff_1_79
07D8 75F040    1926            mov     b,#0x40
07DB 120000    1927            lcall   _LCDprint
07DE 020000    1928            ljmp    L016015?
07E1           1929   L016012?:
07E1           1930   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:337: capacitance = -1.0f / (zi * OMEGA) * 1000000.0f;
07E1 C002      1931            push    ar2
07E3 C003      1932            push    ar3
07E5 C004      1933            push    ar4
07E7 C005      1934            push    ar5
07E9 90DD2A    1935            mov     dptr,#0xDD2A
07EC 75F00E    1936            mov     b,#0x0E
07EF 7446      1937            mov     a,#0x46
07F1 120000    1938            lcall   ___fsmul
07F4 AA82      1939            mov     r2,dpl
07F6 AB83      1940            mov     r3,dph
07F8 ACF0      1941            mov     r4,b
07FA FD        1942            mov     r5,a
07FB E581      1943            mov     a,sp
07FD 24FC      1944            add     a,#0xfc
07FF F581      1945            mov     sp,a
0801 C002      1946            push    ar2
0803 C003      1947            push    ar3
0805 C004      1948            push    ar4
0807 C005      1949            push    ar5
0809 900000    1950            mov     dptr,#0x0000
080C 75F080    1951            mov     b,#0x80
080F 74BF      1952            mov     a,#0xBF
0811 120000    1953            lcall   ___fsdiv
0814 AA82      1954            mov     r2,dpl
0816 AB83      1955            mov     r3,dph
0818 ACF0      1956            mov     r4,b
081A FD        1957            mov     r5,a
081B E581      1958            mov     a,sp
081D 24FC      1959            add     a,#0xfc
081F F581      1960            mov     sp,a
0821 C002      1961            push    ar2
0823 C003      1962            push    ar3
0825 C004      1963            push    ar4
0827 C005      1964            push    ar5
0829 902400    1965            mov     dptr,#0x2400
082C 75F074    1966            mov     b,#0x74
082F 7449      1967            mov     a,#0x49
0831 120000    1968            lcall   ___fsmul
0834 AA82      1969            mov     r2,dpl
0836 AB83      1970            mov     r3,dph
0838 ACF0      1971            mov     r4,b
083A FD        1972            mov     r5,a
083B E581      1973            mov     a,sp
083D 24FC      1974            add     a,#0xfc
083F F581      1975            mov     sp,a
0841           1976   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:338: if(capacitance < 0.0001f){
0841 C002      1977            push    ar2
0843 C003      1978            push    ar3
0845 C004      1979            push    ar4
0847 C005      1980            push    ar5
0849 7417      1981            mov     a,#0x17
084B C0E0      1982            push    acc
084D 74B7      1983            mov     a,#0xB7
084F C0E0      1984            push    acc
0851 74D1      1985            mov     a,#0xD1
0853 C0E0      1986            push    acc
0855 7438      1987            mov     a,#0x38
0857 C0E0      1988            push    acc
0859 8A82      1989            mov     dpl,r2
085B 8B83      1990            mov     dph,r3
085D 8CF0      1991            mov     b,r4
085F ED        1992            mov     a,r5
0860 120000    1993            lcall   ___fslt
0863 AE82      1994            mov     r6,dpl
0865 E581      1995            mov     a,sp
0867 24FC      1996            add     a,#0xfc
0869 F581      1997            mov     sp,a
086B D005      1998            pop     ar5
086D D004      1999            pop     ar4
086F D003      2000            pop     ar3
0871 D002      2001            pop     ar2
0873 EE        2002            mov     a,r6
0874 6000      2003            jz      L016009?
0876           2004   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:339: capacitance = 0.0;
0876 7A00      2005            mov     r2,#0x00
0878 7B00      2006            mov     r3,#0x00
087A 7C00      2007            mov     r4,#0x00
087C 7D00      2008            mov     r5,#0x00
087E 020000    2009            ljmp    L016010?
0881           2010   L016009?:
0881           2011   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:340: }else if(capacitance < 0.020f){
0881 C002      2012            push    ar2
0883 C003      2013            push    ar3
0885 C004      2014            push    ar4
0887 C005      2015            push    ar5
0889 740A      2016            mov     a,#0x0A
088B C0E0      2017            push    acc
088D 74D7      2018            mov     a,#0xD7
088F C0E0      2019            push    acc
0891 74A3      2020            mov     a,#0xA3
0893 C0E0      2021            push    acc
0895 743C      2022            mov     a,#0x3C
0897 C0E0      2023            push    acc
0899 8A82      2024            mov     dpl,r2
089B 8B83      2025            mov     dph,r3
089D 8CF0      2026            mov     b,r4
089F ED        2027            mov     a,r5
08A0 120000    2028            lcall   ___fslt
08A3 AE82      2029            mov     r6,dpl
08A5 E581      2030            mov     a,sp
08A7 24FC      2031            add     a,#0xfc
08A9 F581      2032            mov     sp,a
08AB D005      2033            pop     ar5
08AD D004      2034            pop     ar4
08AF D003      2035            pop     ar3
08B1 D002      2036            pop     ar2
08B3 EE        2037            mov     a,r6
08B4 6000      2038            jz      L016006?
08B6           2039   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:341: capacitance *= 0.85;
08B6 C002      2040            push    ar2
08B8 C003      2041            push    ar3
08BA C004      2042            push    ar4
08BC C005      2043            push    ar5
08BE 90999A    2044            mov     dptr,#0x999A
08C1 75F059    2045            mov     b,#0x59
08C4 743F      2046            mov     a,#0x3F
08C6 120000    2047            lcall   ___fsmul
08C9 AA82      2048            mov     r2,dpl
08CB AB83      2049            mov     r3,dph
08CD ACF0      2050            mov     r4,b
08CF FD        2051            mov     r5,a
08D0 E581      2052            mov     a,sp
08D2 24FC      2053            add     a,#0xfc
08D4 F581      2054            mov     sp,a
08D6 8000      2055            sjmp    L016010?
08D8           2056   L016006?:
08D8           2057   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:342: }else if (capacitance > 0.30f)
08D8 C002      2058            push    ar2
08DA C003      2059            push    ar3
08DC C004      2060            push    ar4
08DE C005      2061            push    ar5
08E0 749A      2062            mov     a,#0x9A
08E2 C0E0      2063            push    acc
08E4 7499      2064            mov     a,#0x99
08E6 C0E0      2065            push    acc
08E8 C0E0      2066            push    acc
08EA 743E      2067            mov     a,#0x3E
08EC C0E0      2068            push    acc
08EE 8A82      2069            mov     dpl,r2
08F0 8B83      2070            mov     dph,r3
08F2 8CF0      2071            mov     b,r4
08F4 ED        2072            mov     a,r5
08F5 120000    2073            lcall   ___fsgt
08F8 AE82      2074            mov     r6,dpl
08FA E581      2075            mov     a,sp
08FC 24FC      2076            add     a,#0xfc
08FE F581      2077            mov     sp,a
0900 D005      2078            pop     ar5
0902 D004      2079            pop     ar4
0904 D003      2080            pop     ar3
0906 D002      2081            pop     ar2
0908 EE        2082            mov     a,r6
0909 6000      2083            jz      L016010?
090B           2084   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:344: capacitance *= 2.3;
090B C002      2085            push    ar2
090D C003      2086            push    ar3
090F C004      2087            push    ar4
0911 C005      2088            push    ar5
0913 903333    2089            mov     dptr,#0x3333
0916 75F013    2090            mov     b,#0x13
0919 7440      2091            mov     a,#0x40
091B 120000    2092            lcall   ___fsmul
091E AA82      2093            mov     r2,dpl
0920 AB83      2094            mov     r3,dph
0922 ACF0      2095            mov     r4,b
0924 FD        2096            mov     r5,a
0925 E581      2097            mov     a,sp
0927 24FC      2098            add     a,#0xfc
0929 F581      2099            mov     sp,a
092B           2100   L016010?:
092B           2101   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:347: sprintf(buff, "C: %.3fuF", capacitance);
092B C002      2102            push    ar2
092D C003      2103            push    ar3
092F C004      2104            push    ar4
0931 C005      2105            push    ar5
0933 7440      2106            mov     a,#__str_4
0935 C0E0      2107            push    acc
0937 74C4      2108            mov     a,#(__str_4 >> 8)
0939 C0E0      2109            push    acc
093B 7480      2110            mov     a,#0x80
093D C0E0      2111            push    acc
093F 74E0      2112            mov     a,#_main_buff_1_79
0941 C0E0      2113            push    acc
0943 74B3      2114            mov     a,#(_main_buff_1_79 >> 8)
0945 C0E0      2115            push    acc
0947 7440      2116            mov     a,#0x40
0949 C0E0      2117            push    acc
094B 120000    2118            lcall   _sprintf
094E E581      2119            mov     a,sp
0950 24F6      2120            add     a,#0xf6
0952 F581      2121            mov     sp,a
0954           2122   ;        D:\UBC\ELEC 291\Lab4\src\lab4.c:348: LCDprint(buff, 2, 1);
0954 75C002    2123            mov     _LCDprint_PARM_2,#0x02
0957 D230      2124            setb    _LCDprint_PARM_3
0959 90B3E0    2125            mov     dptr,#_main_buff_1_79
095C 75F040    2126            mov     b,#0x40
095F 120000    2127            lcall   _LCDprint
0962 020000    2128            ljmp    L016015?
0965           2129            rseg R_CSEG
0965           2130   
0000           2131            rseg R_XINIT
0000           2132   
0000           2133            rseg R_CONST
0000           2134   __str_0:
0000 4C434420  2135            db 'LCD 4-bit test:'
     342D6269
     74207465
     73743A
000F 00        2136            db 0x00
0010           2137   __str_1:
0010 71776564  2138            db 'qwedqeee'
     71656565
0018 00        2139            db 0x00
0019           2140   __str_2:
0019 5A523A20  2141            db 'ZR: %.3f'
     252E3366
0021 00        2142            db 0x00
0022           2143   __str_3:
0022 4C3A2025  2144            db 'L: %.3fmH'
     2E33666D
     48
002B 00        2145            db 0x00
002C           2146   __str_4:
002C 433A2025  2147            db 'C: %.3fuF'
     2E336675
     46
0035 00        2148            db 0x00
0036           2149   
0003           2150            CSEG
0003           2151   
0003           2152   end
